name: CI

on:
  push:
    branches:
      - master
  pull_request:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For setup-rust
  NEXTEST_TEST_THREADS: 3
  NEXTEST_RETRIES: 2
  PROTO_LOG: trace

jobs:
  # format:
  #   name: Format
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]
  #     fail-fast: false
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: moonrepo/setup-rust@v1
  #       with:
  #         cache: false
  #         components: rustfmt
  #     - run: cargo fmt --all --check
  # lint:
  #   name: Lint
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]
  #     fail-fast: false
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: moonrepo/setup-rust@v1
  #       with:
  #         cache: false
  #         components: clippy
  #     - run: cargo clippy --workspace --all-targets
  # test:
  #   name: Test
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, macos-latest, windows-latest]
  #     fail-fast: false
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: moonrepo/setup-rust@v1
  #       with:
  #         bins: cargo-nextest
  #         cache: false # Runs out of disk space
  #     - uses: moonrepo/setup-toolchain@v0
  #       with:
  #         moon-version: latest
  #     - uses: moonrepo/build-wasm-plugin@v0
  #     - run: cargo nextest run --no-default-features
  plan:
    name: Plan
    runs-on: ubuntu-latest
    outputs:
      job-total: ${{ steps.plan.outputs.job-total }}
      jobs-array: ${{ steps.plan.outputs.jobs-array }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true
      - id: plan
        run: bash ./scripts/computeCiJobs.sh
  ci:
    name: Checks
    needs:
      - plan
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        job: ${{ fromJson(needs.plan.outputs.jobs-array) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true
      - uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-nextest
          cache: false # Runs out of disk space
          components: clippy, rustfmt
          targets: wasm32-wasip1
      - run: moon ci --color --log debug --job ${{ matrix.job }} --jobTotal ${{ needs.plan.outputs.job-total }}
      - uses: moonrepo/run-report-action@v1
        if: success() || failure()
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          matrix: ${{ toJSON(matrix) }}
